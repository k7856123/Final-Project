#kennedy becher
#problem 1
"""If we list all the natural numbers below 10 that are multiples of
3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23."""

Find the sum of all the multiples of 3 or 5 below 1000.
all_sum = 0 #setting sum to zero
for i in range(1000): #setting range and for statement
    if (i%3 ==0 or i%5 ==0): # finding multiples of 3 & 5
        all_sum = all_sum + i 
print(all_sum)


#problem 2
"""Each new term in the Fibonacci sequence is generated by adding 
the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms."""
def Fibonacci(p1):
    p1 = input
    if ((p1==0) or (p1==1)):
        return 1
    else:
        return ((Fibonacci(p1-1))+(Fibonacci(p1-2)))
a =0
all_sum = 0
while (Fibonacci(a))<4000000:
    if (((Fibonacci(a))%2)==0):
        all_sum+= Fibonacci(a)
print(all_sum)
Fibonacci()

#problem 3
"""The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?"""
x = 2
y = 600851475143
while x * x < y:
    while y % x == 0:
        y = y / x
    x = x + 1
print(y) 

#problem 5
"""2520 is the smallest number that can be divided by each of the 
numbers from 1 to 10 without any remainder.
What is the smallest positive number that is evenly divisible by 
all of the numbers from 1 to 20?"""
_range = range(10,21)
x = 21
y = False

while y == False:
    if x % 2520 == 0:
        if all(x % z ==0 for z in _range):
            y = True
        else:
            x = x + 2520
    else:
        x = x + 1
print(x)

#problem 7
"""By listing the first six prime numbers: 2, 3, 5, 7, 
11, and 13, we can see that the 6th prime is 13.
What is the 10 001st prime number?"""
def prime(x):
    num = 2
    for y in range(3, x**2, 2):
        z = 1
        while z*z < y:
            z += 2
            if y % z == 0:
               break
        else:
            num += 1
        if num == x:
            return y
print(prime(100001))

#problem 10
"""The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
Find the sum of all the primes below two million."""
total = 2
def prime(x):รท
    if x % 2 == 0: return False
    for y in range(3, int(x**0.5)+1, 2):
        if x % y == 0: return False
    return True
if __name__ == "__main__":
    x = 1
    while x < 2000000:
        x += 2
        if prime(x):total += x
print(total)







